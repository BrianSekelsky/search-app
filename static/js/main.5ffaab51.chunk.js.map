{"version":3,"sources":["icons/expand.svg","icons/minimize.svg","components/Search.jsx","components/ListItem.jsx","components/ToPrint.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","props","react_default","a","createElement","onSubmit","getTitle","className","placeholder","type","name","ListItem","state","expanded","this","setState","_React$createElement2","_React$createElement","key","result","id","onChange","onSelect","bind","onClick","handleExpand","public_title","status","age_range","min_age","max_age","target_sample_size","conditions","length","map","condition","interventions","intervention","locations","location","records","record","href","source_url","documents","doc","summary","alt","Object","defineProperty","require","Component","ToPrint","selected","select","index","App","results","getResults","e","preventDefault","title","target","elements","searchterm","value","tempArray","axios","get","concat","then","res","i","data","items","newResult","push","_this","handleSelect","toConsumableArray","includes","indexOf","splice","pdf","fromHTML","window","document","getElementById","width","save","_this2","components_Search","components_ListItem","components_ToPrint","createPdf","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ffaab51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/expand.bb158ab6.svg\";","module.exports = __webpack_public_path__ + \"static/media/minimize.8f39a211.svg\";","import React from 'react'\n\nconst Search = (props) => {\n\n\treturn(\n\t\t<form onSubmit={props.getTitle}>\n\t\t\t<input className=\"search\" placeholder=\"Search (e.g. cancer)\" type=\"text\" name=\"searchterm\" />\n\t\t\t<button className=\"submit-button\">Submit</button>\n\t\t</form>\n\t);\n\n}\n\nexport default Search;","import React, {Component} from 'react'\n\nclass ListItem extends Component {\n\n\tstate = {\n\t\texpanded: false,\n\t}\n\n\thandleExpand(){\n\t\tthis.setState({expanded: !this.state.expanded})\n\t}\n\n\trender(){\n\t\tif(!this.state.expanded){\n\t\t\treturn(\n\t\t\t   \t<li key={this.props.result.id}>\n\t\t\t    \t<div className=\"wrapper\">\n\t\t\t    \t\t<input type=\"checkbox\"\n\t\t\t                onChange={this.props.onSelect.bind(this,this.props.result)} \n\t\t\t            />\n\t\t\t    \t\t<div className=\"clickable\" onClick={this.handleExpand.bind(this)} >\n\t\t\t           \t\t<span>{this.props.result.public_title}</span>\n\t\t\t           \t</div>\n\t\t\t           \t<img className=\"svg\" alt=\"expand\" onClick={this.handleExpand.bind(this)} className=\"expand-button\" src={require(\"../icons/expand.svg\")} />\n\t\t\t        </div> \n\t\t\t    </li>\n\t\t\t);\n\t\t} else{\n\t\t\treturn(\n\t\t\t    \t\n\t\t\t   \t<li key={this.props.result.id}>\n\t\t\t    \t<div className=\"wrapper\">\n\t\t\t    \t\t<input type=\"checkbox\"\n\t\t\t                onChange={this.props.onSelect.bind(this,this.props.result)}\n\t\t\t            />\n\t\t\t    \t\t<div className=\"clickable\" onClick={this.handleExpand.bind(this)}>\n\t\t\t\t           \t<span>{this.props.result.public_title}</span>\n\t\t\t\t           \t<ul>\n\t\t\t\t           \t\t<li className=\"nested-list-item\"><b>Status:</b> {this.props.result.status ? this.props.result.status : \"none\"}</li>\n\t\t\t\t           \t\t<li className=\"nested-list-item\"><b>Age Range:</b> {this.props.result.age_range ? this.props.result.age_range.min_age +\" - \"+ this.props.result.age_range.max_age : \"none\"}</li>\n\t\t\t\t           \t\t<li className=\"nested-list-item\"><b>Target Sample Size:</b> {this.props.result.target_sample_size ? this.props.result.target_sample_size : \"none\"}</li>\n\t\t\t\t           \t\t<li className=\"nested-list-item\"><b>Conditions:</b> {this.props.result.conditions.length > 0 ? this.props.result.conditions.map((condition) =>\n\t\t\t\t           \t\t\t<p>{condition.name} </p>) : \"none\"}</li>\n\t\t\t\t           \t\t<li className=\"nested-list-item\"><b>Interventions:</b> {this.props.result.interventions.length > 0 ? this.props.result.interventions.map((intervention) =>\n\t\t\t\t           \t\t\t<p>{intervention.name}</p>) : \"none\"}</li>\n\t\t\t\t           \t\t<li className=\"nested-list-item\"><b>Locations:</b> {this.props.result.locations.length > 0 ? this.props.result.locations.map((location) =>\n\t\t\t\t           \t\t\t<p>{location.name}</p>) : \"none\"}</li>\n\t\t\t\t           \t\t<li className=\"nested-list-item\"><b>Records:</b> {this.props.result.records.length > 0 ? this.props.result.records.map((record) =>\n\t\t\t\t           \t\t\t<p><a href={record.source_url}>{record.source_url}</a></p>) : \"none\"}</li>\n\t\t\t\t           \t\t<li className=\"nested-list-item\"><b>Documents:</b> {this.props.result.documents.length > 0 ? this.props.result.documents.map((doc) =>\n\t\t\t\t           \t\t\t<p>{doc.name}</p>) : \"none\"}</li>\n\t\t\t\t           \t\t<li className=\"nested-list-item\"><b>Summary:</b> {this.props.result.summary ? this.props.result.summary : \"none\"}</li>\n\t\t\t\t           \t</ul>\n\t\t\t           \t</div>\n\t\t\t           \t<img className=\"svg\" alt=\"minimize\" onClick={this.handleExpand.bind(this)} className=\"expand-button\" src={require(\"../icons/minimize.svg\")} />\n\t\t\t        </div> \n\t\t\t    </li>\n\t\t           \t\n\t\t\t);\n\t\t}\n\t}\n\n}\n\nexport default ListItem;","import React, {Component} from 'react'\n\nclass ToPrint extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div id=\"divPDF\" className=\"hide\">\n\t\t\t\t<h1 id=\"pdfHeader\">Big Medical Research Company</h1>\n\t\t\t\t<ul>\n\t\t\t\t\t{this.props.selected.map((select, index) => (\n\t\t\t            <li key={index}>\n\t\t\t            \t{select}\n\t\t\t            </li>\n\t\t\t        ))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ToPrint;","import React, {Component} from 'react'\nimport axios from 'axios'\nimport './App.css'\n\nimport Search from \"./components/Search\"\nimport ListItem from \"./components/ListItem\"\nimport ToPrint from \"./components/ToPrint\"\n\nimport jspdf from 'jspdf'\n\nclass App extends Component{\n\n  state = {\n    results: [],\n    selected: [],\n  }\n\n  getResults = (e) => {\n      e.preventDefault()\n      const title = e.target.elements.searchterm.value\n      var tempArray = []\n      if(title !== \"\")\n      axios.get(`https://api.opentrials.net/v1/search?q=${title}`).then((res) => {\n        for(var i = 0; i < res.data.items.length; i++){\n          const newResult = res.data.items[i]\n          tempArray.push(newResult)\n        }\n        this.setState({results: tempArray})\n      })\n  }\n\n  createPdf() {\n\n    const pdfConverter = require('jspdf')\n\n    const pdf = new pdfConverter('p','pt','c6')\n\n    pdf.fromHTML(window.document.getElementById('divPDF'), 10, 10,{'width': 180});\n\n    pdf.save(\"report.pdf\")\n\n  }\n\n  handleSelect = result =>{\n    const selected = [...this.state.selected];\n    if(!selected.includes(result.public_title)){\n      selected.push(result.public_title)\n    }\n    else{\n      var index = selected.indexOf(result.public_title)\n      selected.splice(index, 1)\n    }\n    this.setState({ selected });\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n        <h1>Open Trials Search</h1>\n        <Search getTitle={this.getResults} />\n        <ul>\n          {this.state.results.map((result, index) => (\n            <ListItem key={result.id} result={result} onSelect={this.handleSelect} />\n          ))}\n        </ul>\n        <ToPrint selected={this.state.selected}/>\n        <button className=\"download-button\" onClick={this.createPdf.bind(this)}>Download Report of Selected Trials</button>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}